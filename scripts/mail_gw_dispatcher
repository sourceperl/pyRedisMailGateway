#!/usr/bin/env python3

from difflib import get_close_matches
import json
import subprocess
import redis
import logging
import traceback


def run_mail_app(app, *args):
    # log this run
    logging.info("call process %s with args %s" % (app, args))
    # run app
    ret_code = subprocess.call([app] + list(args))
    # check error
    if ret_code:
        logging.error("%s return error (code %s)" % (app, ret_code))


# main program
if __name__ == "__main__":
    # logging setup
    logging.basicConfig(format="%(asctime)s %(message)s", level=logging.INFO)

    # redis setup
    r = redis.StrictRedis()
    ps = r.pubsub()
    ps.subscribe(["mail_gw:msg:receive"])

    # listen loop
    for item in ps.listen():
        if item["type"] == "message":
            try:
                d_r = json.loads(item["data"].decode())
                sender_adr = d_r["from"]
                subject = d_r["subject"].strip().lower()
                body = d_r["body"].strip()
                # trigger for echo request
                if get_close_matches(subject, ["test echo", "test ping"], cutoff=0.80):
                    logging.info("process echo request (request by %s)" % sender_adr)
                    run_mail_app("mail_app_send", sender_adr, "-s", "echo reply")
                # trigger for app flyspray report
                elif get_close_matches(subject, ["flyspray"], cutoff=0.75):
                    logging.info("process flyspray report (request by %s)" % sender_adr)
                    run_mail_app("mail_app_fly_report", sender_adr)
                # trigger for app menu ESAT
                elif get_close_matches(subject, ["menu esat", "ajout menu"], cutoff=0.75):
                    logging.info("process menu ESAT (request by %s)" % sender_adr)
                # no trigger found: subject not understood
                else:
                    logging.info("no trigger for subject \"%s\" (request by %s)" % (subject, sender_adr))
            except Exception:
                logging.error(traceback.format_exc())
